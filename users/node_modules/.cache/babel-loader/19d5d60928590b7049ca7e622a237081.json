{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sajja\\\\OneDrive\\\\Desktop\\\\web\\\\covid_app\\\\users\\\\src\\\\CovidApp\\\\components\\\\CountryPicker\\\\CountryPicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchData } from '../../api';\nimport { fetchCountries } from '../../api'; //with only index we dont add .js\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  _s();\n\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n    console.log('work');\n  }, [setFetchedCountries]); //[]only first time when render, without [] means will reflect on every event on the site, with a parameter means will update when this value changes\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: styles.formControl,\n    children: /*#__PURE__*/_jsxDEV(NativeSelect, {\n      defaultValue: \"\",\n      onChange: e => handleCountryChange(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Global\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), fetchedCountries.map((country, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country,\n        children: [\" \", country]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 49\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountryPicker, \"Do9onPiNE5+jzUqGJ2UrSR1Aye8=\");\n\n_c = CountryPicker;\nexport default CountryPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryPicker\");","map":{"version":3,"sources":["C:/Users/sajja/OneDrive/Desktop/web/covid_app/users/src/CovidApp/components/CountryPicker/CountryPicker.js"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchData","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","console","log","formControl","e","target","value","map","country","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAOC,YAAP,EAAqBC,WAArB,QAAuC,mBAAvC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,SAAR,QAAwB,WAAxB;AACA,SAAQC,cAAR,QAA6B,WAA7B,C,CAAyC;;AAEzC,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA0B;AAAA;;AAC/C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AAECC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMU,QAAQ,GAAG,YAAW;AAC1BD,MAAAA,mBAAmB,CAAC,MAAMJ,cAAc,EAArB,CAAnB;AACD,KAFD;;AAGAK,IAAAA,QAAQ;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,GANQ,EAMP,CAACH,mBAAD,CANO,CAAT,CAH8C,CASlB;;AAC1B,sBACI,QAAC,WAAD;AAAa,IAAA,SAAS,EAAGN,MAAM,CAACU,WAAhC;AAAA,2BAEE,QAAC,YAAD;AACC,MAAA,YAAY,EAAC,EADd;AACiB,MAAA,QAAQ,EAAIC,CAAD,IAAMP,mBAAmB,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CADrD;AAAA,8BAGE;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIER,gBAAgB,CAACS,GAAjB,CAAqB,CAACC,OAAD,EAASC,CAAT,kBAAe;AAAgB,QAAA,KAAK,EAAED,OAAvB;AAAA,wBAAkCA,OAAlC;AAAA,SAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,cAApC,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAtBD;;GAAMb,a;;KAAAA,a;AAwBN,eAAeA,aAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport{NativeSelect, FormControl} from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchData} from '../../api';\r\nimport {fetchCountries} from '../../api' //with only index we dont add .js\r\n                       \r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n  useEffect(() => {\r\n   const fetchAPI = async() => {\r\n     setFetchedCountries(await fetchCountries())\r\n   }\r\n   fetchAPI()\r\n   console.log('work')\r\n  },[setFetchedCountries])    //[]only first time when render, without [] means will reflect on every event on the site, with a parameter means will update when this value changes\r\n    return (\r\n        <FormControl className= {styles.formControl}>\r\n\r\n          <NativeSelect \r\n           defaultValue='' onChange ={(e) =>handleCountryChange(e.target.value)}>\r\n\r\n            <option value=\"\">Global</option>\r\n           {fetchedCountries.map((country,i) => <option key={i} value={country}> {country}</option>)}            \r\n          </NativeSelect>\r\n            \r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker"]},"metadata":{},"sourceType":"module"}