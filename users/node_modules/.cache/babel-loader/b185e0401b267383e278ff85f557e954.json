{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sajja\\\\OneDrive\\\\Desktop\\\\web\\\\covid_app\\\\users\\\\src\\\\CovidApp\\\\components\\\\Chart\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api'; // eslint-disable-next-line \n\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport Map from '../../Geomap1';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: 'blue',\n        backgroundColor: '#93a2bf',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 8\n  }, this) : null;\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this) : null;\n  const pieChart = confirmed ? /*#__PURE__*/_jsxDEV(Pie, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '0px 50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), country && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.countrychart,\n        children: [barChart, /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            color: 'white',\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), pieChart]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.globalchart,\n      children: lineChart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/sajja/OneDrive/Desktop/web/covid_app/users/src/CovidApp/components/Chart/Chart.js"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","Pie","styles","Map","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","backgroundColor","fill","barChart","value","legend","display","title","text","pieChart","margin","container","countrychart","color","width","globalchart"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { fetchDailyData } from '../../api'\r\n// eslint-disable-next-line \r\nimport { Line, Bar, Pie } from 'react-chartjs-2'\r\nimport styles from './Chart.module.css'\r\nimport Map from '../../Geomap1'\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData())\r\n    }\r\n    fetchAPI()\r\n  }, [])\r\n\r\n  const lineChart = (\r\n    dailyData.length ?\r\n      (<Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: 'blue',\r\n            backgroundColor: '#93a2bf',\r\n            fill: true\r\n          }, {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true\r\n          },\r\n          ]\r\n        }} />) : null\r\n  )\r\n\r\n  const barChart = (\r\n    confirmed ?\r\n      (\r\n        <Bar\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: [\r\n                'rgba(0, 0, 255, 0.5)',\r\n                'rgba(0, 255, 0, 0.5)',\r\n                'rgba(255, 0, 0, 0.5)'\r\n              ],\r\n              data: [confirmed.value, recovered.value, deaths.value]\r\n            }]\r\n\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current state in ${country}` },\r\n          }}\r\n        />\r\n      ) : null\r\n  )\r\n  const pieChart = (\r\n    confirmed ?\r\n      (\r\n        <Pie\r\n          data={{\r\n            labels: ['Infected', 'Recovered', 'Deaths'],\r\n            datasets: [{\r\n              label: 'People',\r\n              backgroundColor: [\r\n                'rgba(0, 0, 255, 0.5)',\r\n                'rgba(0, 255, 0, 0.5)',\r\n                'rgba(255, 0, 0, 0.5)'\r\n              ],\r\n              data: [confirmed.value, recovered.value, deaths.value]\r\n            }]\r\n\r\n          }}\r\n          options={{\r\n            legend: { display: false },\r\n            title: { display: true, text: `Current state in ${country}` },\r\n          }}\r\n        />\r\n      ) : null\r\n  )\r\n  return (\r\n    <div style={{margin:'0px 50px'}}>\r\n      <div className={styles.container}>\r\n        <Map />\r\n        {country &&\r\n          <div className={styles.countrychart}>{barChart}\r\n            <hr style={{ color: 'white', width: '100%' }}></hr>{pieChart}\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      <div className={styles.globalchart}>{lineChart}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart"]},"metadata":{},"sourceType":"module"}