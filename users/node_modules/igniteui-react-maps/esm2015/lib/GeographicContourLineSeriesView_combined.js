/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { GeographicXYTriangulatingSeriesView } from "./GeographicXYTriangulatingSeriesView";
import { ScatterContourSeries } from "igniteui-react-charts";
import { markType, runOn, delegateCombine, markDep } from "igniteui-react-core";
import { GeographicXYTriangulatingSeries } from "./GeographicXYTriangulatingSeries";
import { DependencyProperty } from "igniteui-react-core";
import { ValueBrushScale } from "igniteui-react-charts";
import { ContourValueResolver } from "igniteui-react-charts";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
export let GeographicContourLineSeriesView = /*@__PURE__*/ (() => {
    class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {
        constructor(a) {
            super(a);
            this.b8 = null;
            this.b8 = a;
        }
        bv() {
            super.bv();
            if (this.b8.l3 != null) {
                this.b8.mv.nl = this.b8.mx;
                this.b8.mv.nq = this.b8.m0;
            }
        }
        b9() {
            if (this.b8.mv != null) {
                this.b8.mv.nl = this.b8.mx;
            }
        }
        ca() {
            if (this.b8.mv != null) {
                this.b8.mv.nq = this.b8.m0;
            }
        }
    }
    GeographicContourLineSeriesView.$t = /*@__PURE__*/ markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', GeographicXYTriangulatingSeriesView.$);
    return GeographicContourLineSeriesView;
})();
/**
 * @hidden
 */
export let GeographicContourLineSeries = /*@__PURE__*/ (() => {
    class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {
        constructor() {
            super();
            this.triangulationStatusChanged = null;
            this.ab = GeographicContourLineSeries.$;
        }
        l8() {
            super.l8();
        }
        l2() {
            this.mv = new ScatterContourSeries();
            let a = this.mv;
            a.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.m3));
            return this.mv;
        }
        m3(a, b) {
            if (this.triangulationStatusChanged != null) {
                this.triangulationStatusChanged(this, b);
            }
        }
        bf() {
            return new GeographicContourLineSeriesView(this);
        }
        iv(a) {
            super.iv(a);
            this.my = a;
        }
        i0(a, b, c, d) {
            super.i0(a, b, c, d);
            switch (b) {
                case GeographicContourLineSeries.$$p[0]:
                    this.my.b9();
                    break;
                case GeographicContourLineSeries.$$p[1]:
                    this.my.ca();
                    break;
                case GeographicContourLineSeries.$$p[2]:
                    this.mv.nj = this.mu;
                    break;
                case "Thickness":
                    this.mv.ey = this.ey;
                    break;
                case "DashArray":
                    this.mv.lc = this.lc;
                    break;
                case "DashCap":
                    this.mv.ld = this.ld;
                    break;
                case "MiterLimit":
                    this.mv.es = this.es;
                    break;
            }
        }
    }
    GeographicContourLineSeries.$t = /*@__PURE__*/ markType(GeographicContourLineSeries, 'GeographicContourLineSeries', GeographicXYTriangulatingSeries.$);
    GeographicContourLineSeries.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', ['FillScale:mx:m4', [ValueBrushScale.$, null], 'ValueMemberPath:m0:m5', [2, "value"], 'ValueResolver:mu:m6', [ContourValueResolver.$, null]]);
    return GeographicContourLineSeries;
})();
//# sourceMappingURL=GeographicContourLineSeriesView_combined.js.map
