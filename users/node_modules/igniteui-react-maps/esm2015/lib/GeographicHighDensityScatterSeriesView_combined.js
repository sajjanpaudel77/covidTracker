/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { HostSeriesView } from "./HostSeriesView";
import { GeographicMapSeriesHost } from "./GeographicMapSeriesHost";
import { HighDensityScatterSeries } from "igniteui-react-charts";
import { typeCast, markType, runOn, delegateCombine, markDep } from "igniteui-react-core";
import { DependencyProperty } from "igniteui-react-core";
import { Color } from "igniteui-react-core";
import { PropertyMetadata } from "igniteui-react-core";
/**
 * @hidden
 */
export let GeographicHighDensityScatterSeriesView = /*@__PURE__*/ (() => {
    class GeographicHighDensityScatterSeriesView extends HostSeriesView {
        constructor(a) {
            super(a);
            this.b0 = null;
            this.b0 = a;
        }
        bv() {
            super.bv();
            let a = typeCast(HighDensityScatterSeries.$, this.b0.l3);
            a.n4 = this.b0.ms;
            a.n8 = this.b0.mq;
            a.mo = this.b0.mf;
            a.mn = this.b0.me;
            a.c7 = this.b0.md;
            a.ng = this.b0.mh;
            a.nf = this.b0.mg;
        }
        b6() {
            this.b0.l3.n4 = this.b0.ms;
        }
        b5() {
            this.b0.l3.n8 = this.b0.mq;
        }
        cb() {
            this.b0.l3.mo = this.b0.mf;
        }
        b9() {
            this.b0.l3.mn = this.b0.me;
        }
        b7() {
            this.b0.l3.c7 = this.b0.md;
        }
        b4() {
            this.b0.l3.ng = this.b0.mh;
        }
        b2() {
            this.b0.l3.nf = this.b0.mg;
        }
        ca() {
            let a = typeCast(HighDensityScatterSeries.$, this.b0.l3);
            if (this.b0.bs == null) {
                a.l8 = null;
                a.ma = null;
                return;
            }
            a.l8 = this.b0.bs.nc;
            a.ma = this.b0.bs.ne;
        }
        cc() {
            this.b0.l3.l8 = this.b0.bs.nc;
        }
        cd() {
            this.b0.l3.ma = this.b0.bs.ne;
        }
        b3() {
            this.b0.l3.o1 = this.b0.na;
        }
        b1() {
            this.b0.l3.o0 = this.b0.m9;
        }
        b8() {
            this.b0.l3.ns = this.b0.mk;
        }
    }
    GeographicHighDensityScatterSeriesView.$t = /*@__PURE__*/ markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', HostSeriesView.$);
    return GeographicHighDensityScatterSeriesView;
})();
/**
 * @hidden
 */
export let GeographicHighDensityScatterSeries = /*@__PURE__*/ (() => {
    class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {
        constructor() {
            super();
            this.mb = null;
            this.progressiveLoadStatusChanged = null;
            this.mj = 0;
            this.ab = GeographicHighDensityScatterSeries.$;
        }
        bf() {
            return new GeographicHighDensityScatterSeriesView(this);
        }
        iv(a) {
            super.iv(a);
            this.mc = a;
        }
        l2() {
            return new HighDensityScatterSeries();
        }
        get ml() {
            return this.mj;
        }
        set ml(a) {
            let b = this.mj;
            this.mj = a;
            this.raisePropertyChanged("ProgressiveStatus", b, this.mj);
        }
        l8() {
            super.l8();
            let a = this.l3;
            a.progressiveLoadStatusChanged = delegateCombine(a.progressiveLoadStatusChanged, runOn(this, this.my));
        }
        my(a, b) {
            this.ml = b.currentStatus;
            if (this.progressiveLoadStatusChanged != null) {
                this.progressiveLoadStatusChanged(this, b);
            }
        }
        i0(a, b, c, d) {
            super.i0(a, b, c, d);
            switch (b) {
                case "SeriesViewer":
                    this.mc.ca();
                    break;
                case GeographicHighDensityScatterSeries.$$p[5]:
                    this.mc.b6();
                    break;
                case GeographicHighDensityScatterSeries.$$p[4]:
                    this.mc.b5();
                    break;
                case GeographicHighDensityScatterSeries.$$p[9]:
                    this.mc.cb();
                    break;
                case GeographicHighDensityScatterSeries.$$p[8]:
                    this.mc.b9();
                    break;
                case GeographicHighDensityScatterSeries.$$p[6]:
                    this.mc.b7();
                    break;
                case "XAxis":
                    this.mc.cc();
                    break;
                case "YAxis":
                    this.mc.cd();
                    break;
                case GeographicHighDensityScatterSeries.$$p[3]:
                    this.mc.b4();
                    break;
                case GeographicHighDensityScatterSeries.$$p[1]:
                    this.mc.b2();
                    break;
                case GeographicHighDensityScatterSeries.$$p[2]:
                    this.mc.b3();
                    break;
                case GeographicHighDensityScatterSeries.$$p[0]:
                    this.mc.b1();
                    break;
                case GeographicHighDensityScatterSeries.$$p[7]:
                    this.mc.b8();
                    break;
            }
        }
        get_dq() {
            return true;
        }
        set_dq(a) {
            super.set_dq(a);
        }
    }
    GeographicHighDensityScatterSeries.$t = /*@__PURE__*/ markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', GeographicMapSeriesHost.$);
    GeographicHighDensityScatterSeries.$$p = /*@__PURE__*/ markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', ['HeatMaximumColor:m9:mz', [Color.$, null], 'HeatMaximum:mg:m0', [1, 50], 'HeatMinimumColor:na:m1', [Color.$, null], 'HeatMinimum:mh:m2', [1, 0], 'LatitudeMemberPath:mq:m3', [2, null], 'LongitudeMemberPath:ms:m4', [2, null], 'MouseOverEnabled:md:m5', [0, false], 'PointExtent:mk:m6', [1, 1], 'ProgressiveLoad:me:m7', [0, true], 'UseBruteForce:mf:m8', [0, false]]);
    return GeographicHighDensityScatterSeries;
})();
//# sourceMappingURL=GeographicHighDensityScatterSeriesView_combined.js.map
