/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Series } from "igniteui-react-charts";
import { DependencyProperty } from "igniteui-react-core";
import { typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from "igniteui-react-core";
import { SeriesView } from "igniteui-react-charts";
import { SeriesViewer } from "igniteui-react-charts";
import { PropertyMetadata } from "igniteui-react-core";
import { PlatformConstants } from "igniteui-react-core";
import { isNaN_ } from "igniteui-react-core";
/**
 * @hidden
 */
export let GeographicMapSeriesHost = /*@__PURE__*/ (() => {
    class GeographicMapSeriesHost extends Series {
        constructor() {
            super();
            this.l1 = null;
            this.l3 = this.l2();
        }
        get_ct() {
            return true;
        }
        fs(a, b) {
            let c = this.gv(b);
            if (c == "LatitudeMemberPath") {
                c = "YMemberPath";
            }
            if (c == "LongitudeMemberPath") {
                c = "XMemberPath";
            }
            return this.l3.fs(a, b);
        }
        ch(a, b, c) {
            return this.l3.ch(a, b, c);
        }
        ag() {
            return this.l3.ag();
        }
        a5() {
            return this.l3;
        }
        get l3() {
            return this.l1;
        }
        set l3(a) {
            let b = this.l3 != a;
            if (b) {
                this.l1 = a;
                this.l8();
            }
        }
        l8() {
            if (this.l1 != null) {
                let hostedSeries_ = this.l1;
                hostedSeries_.externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);
                hostedSeries_.externalObject._implementation = hostedSeries_;
            }
            this.h1(this.l3);
            this.l4.bv();
        }
        fp(a) {
            return this.fu(this.l3, a);
        }
        bf() {
            return new HostSeriesView(this);
        }
        iv(a) {
            super.iv(a);
            this.l4 = typeCast(HostSeriesView.$, a);
        }
        get l5() {
            return this.c(GeographicMapSeriesHost.ma);
        }
        set l5(a) {
            this.h(GeographicMapSeriesHost.ma, a);
        }
        i0(a, b, c, d) {
            super.i0(a, b, c, d);
            switch (b) {
                case "SeriesViewer":
                    this.l3.bs = this.bs;
                    if (c != null) {
                        c.jy(this.l3);
                    }
                    if (d != null) {
                        this.bs.hc(this.l3);
                    }
                    this.l3.i3(this.lz);
                    this.l3.fh = this.fh;
                    this.h6(this.l3);
                    this.fk = this.l3.fk;
                    let e = typeCast(SeriesViewer.$, c);
                    if (e != null) {
                        e.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.l9));
                    }
                    if (this.bs != null) {
                        let f = this.bs;
                        f.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.l9));
                    }
                    this.l7();
                    break;
                case "SyncLink":
                    this.l3.bn = this.bn;
                    break;
                case "VisibleFromScale":
                    this.l7();
                    break;
                case "Index":
                    this.l3.fh = this.fh;
                    break;
                case "ItemsSource":
                    this.l4.bw();
                    break;
                case "Resolution":
                    this.l4.by();
                    break;
                case "TransitionDuration":
                    this.l4.bz();
                    break;
                case "Opacity":
                    this.l4.bx();
                    break;
                case "Visibility":
                    let hs_ = this.l3;
                    let v_ = this._visibility;
                    hs_.visibility = v_;
                    break;
                case "MouseOverEnabled":
                    this.l3.c7 = this.c7;
                    break;
                case "ExpectFunctions":
                    this.l3.expectFunctions = this.expectFunctions;
                    break;
            }
        }
        l7() {
            if (this.bs == null || this.l3 == null) {
                return;
            }
            if (!isNaN_(this.l5)) {
                if (this.bs.mr.width > this.l5) {
                    let hs_ = this.l3;
                    let v_ = 1;
                    hs_.visibility = v_;
                }
                else {
                    let hs2_ = this.l3;
                    let v2_ = 0;
                    hs2_.visibility = v2_;
                }
            }
        }
        l9(a, b) {
            this.l7();
        }
        je(a) {
            super.je(a);
            if (this.l3 != null) {
                this.l3.je(a);
            }
        }
        jd(a, b, c, d, e) {
            if (this.l3 != null) {
                this.l3.jd(a, b, c, d, e);
            }
        }
        ar(a, b) {
            return this.l3.ar(a, b);
        }
        jn() {
            super.jn();
            this.l3.jn();
        }
        get_coercionMethods() {
            return this._coercionMethods;
        }
        set_coercionMethods(a) {
            this._coercionMethods = a;
            this.l3.coercionMethods = a;
        }
        h5(a) {
            super.h5(a);
            if (this.l3 != null) {
                let b = this.l3.fo();
                this.hy(a, b);
            }
        }
    }
    GeographicMapSeriesHost.$t = /*@__PURE__*/ markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', Series.$);
    GeographicMapSeriesHost.ma = /*@__PURE__*/ DependencyProperty.i("VisibleFromScale", Number_$type, GeographicMapSeriesHost.$, /*@__PURE__*/ new PropertyMetadata(2, 1, (a, b) => {
        let c = a;
        c.raisePropertyChanged("VisibleFromScale", b.oldValue, b.newValue);
    }));
    return GeographicMapSeriesHost;
})();
/**
 * @hidden
 */
export let HostSeriesView = /*@__PURE__*/ (() => {
    class HostSeriesView extends SeriesView {
        constructor(a) {
            super(a);
            this.bu = null;
            this.bu = a;
        }
        ao(a, b) {
            super.ao(a, b);
        }
        bv() {
            this.bu.l3.itemsSource = this.bu.itemsSource;
            this.bu.l3.fh = this.bu.fh;
            this.bu.l3.k6 = this.bu.k6;
            this.bu.l3.k9 = this.bu.k9;
            this.bu.l3.eu = this.bu.eu;
            this.bu.l3.fi = this.bu.fi;
            this.bu.l3._opacity = this.bu._opacity;
        }
        bw() {
            this.bu.l3.itemsSource = this.bu.itemsSource;
        }
        by() {
            this.bu.l3.eu = this.bu.eu;
        }
        bz() {
            this.bu.l3.fi = this.bu.fi;
        }
        bx() {
            this.bu.l3._opacity = this.bu._opacity;
        }
    }
    HostSeriesView.$t = /*@__PURE__*/ markType(HostSeriesView, 'HostSeriesView', SeriesView.$);
    return HostSeriesView;
})();
//# sourceMappingURL=GeographicMapSeriesHost_combined.js.map
