import { delegateCombine, delegateRemove } from "igniteui-react-core";
import { IgrGetTileImageUriArgs } from "igniteui-react-core";
import { IgrGeographicMapImagery } from "./igr-geographic-map-imagery";
/**
 * Represents a CustomMapImagery MapImagery
*/
export class IgrCustomMapImagery extends IgrGeographicMapImagery {
    constructor() {
        super();
        this._getTileImageUri = null;
        this._getTileImageUri_wrapped = null;
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    /**
     * Raised when URI for tiles should be provided
    */
    get getTileImageUri() {
        return this._getTileImageUri;
    }
    set getTileImageUri(ev) {
        if (this._getTileImageUri_wrapped !== null) {
            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);
            this._getTileImageUri_wrapped = null;
            this._getTileImageUri = null;
        }
        this._getTileImageUri = ev;
        this._getTileImageUri_wrapped = (o, e) => {
            let outerArgs = new IgrGetTileImageUriArgs();
            outerArgs._provideImplementation(e);
            if (this.beforeGetTileImageUri) {
                this.beforeGetTileImageUri(this, outerArgs);
            }
            if (this._getTileImageUri) {
                this._getTileImageUri(this, outerArgs);
            }
        };
        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);
    }
}
//# sourceMappingURL=igr-custom-map-imagery.js.map
