import { IgrSeries } from "igniteui-react-charts";
import { toPoint } from "igniteui-react-core";
/**
 * Base class for hosting chart series in a IgxGeographicMap.Component
*/
export class IgrGeographicMapSeriesHost extends IgrSeries {
    constructor(props) {
        super(props);
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    /**
     * Checks if this control is geographic coordinate system
    */
    get isGeographic() {
        return this.i.ct;
    }
    /**
     * The minimum scale at which this series becomes visible.
     * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.
    */
    get visibleFromScale() {
        return this.i.l5;
    }
    set visibleFromScale(v) {
        this.i.l5 = +v;
    }
    /**
     * Gets or sets the coercion methods to use when loading data from data sources.
     * Should be specified before setting any member paths, if being used. Setting it later
     * will not cause data to be reimported into the chart.
    */
    get coercionMethods() {
        return this.i.coercionMethods;
    }
    set coercionMethods(v) {
        this.i.coercionMethods = v;
    }
    getItemValue(item, memberPathName) {
        let iv = this.i.fs(item, memberPathName);
        return (iv);
    }
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    getItem(world) {
        let iv = this.i.fp(toPoint(world));
        return (iv);
    }
    /**
     * Renders the series.
    
    * @param animate  * True if the change should be animated.
    */
    renderSeries(animate) {
        this.i.je(animate);
    }
    /**
     * Called when this series' Style is updated.
    
    */
    styleUpdated() {
        this.i.jn();
    }
}
//# sourceMappingURL=igr-geographic-map-series-host.js.map
