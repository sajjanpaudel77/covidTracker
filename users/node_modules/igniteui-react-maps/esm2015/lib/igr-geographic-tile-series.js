import { delegateCombine, delegateRemove } from "igniteui-react-core";
import { IgrImageTilesReadyEventArgs } from "./igr-image-tiles-ready-event-args";
import { IgrGeographicShapeSeriesBase } from "./igr-geographic-shape-series-base";
import { GeographicTileSeries } from "./GeographicTileSeries";
/**
 * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.
*/
export class IgrGeographicTileSeries extends IgrGeographicShapeSeriesBase {
    constructor(props) {
        super(props);
        this._imageTilesReady = null;
        this._imageTilesReady_wrapped = null;
    }
    createImplementation() {
        return new GeographicTileSeries();
    }
    /**
                                 * @hidden
                                 */
    get i() {
        return this._implementation;
    }
    /**
     * The MapImagery which is used to provide the tiles for display.
    */
    get tileImagery() {
        if (this.i.mq == null) {
            return null;
        }
        return this.i.mq.externalObject;
    }
    set tileImagery(v) {
        v == null ? this.i.mq = null : this.i.mq = v.i;
    }
    findByName(name) {
        var baseResult = super.findByName(name);
        if (baseResult) {
            return baseResult;
        }
        if (this.tileImagery && this.tileImagery.name && this.tileImagery.name == name) {
            return this.tileImagery;
        }
        return null;
    }
    /**
     * Removes all cached tile Imagery from the
    
    */
    clearTileCache() {
        this.i.mu();
    }
    /**
     * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.
    */
    get imageTilesReady() {
        return this._imageTilesReady;
    }
    set imageTilesReady(ev) {
        if (this._imageTilesReady_wrapped !== null) {
            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);
            this._imageTilesReady_wrapped = null;
            this._imageTilesReady = null;
        }
        this._imageTilesReady = ev;
        this._imageTilesReady_wrapped = (o, e) => {
            let outerArgs = new IgrImageTilesReadyEventArgs();
            outerArgs._provideImplementation(e);
            if (this.beforeImageTilesReady) {
                this.beforeImageTilesReady(this, outerArgs);
            }
            if (this._imageTilesReady) {
                this._imageTilesReady(this, outerArgs);
            }
        };
        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);
    }
}
//# sourceMappingURL=igr-geographic-tile-series.js.map
