/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { TileSeries } from "./TileSeries";
import { GeographicShapeSeriesBase } from "./GeographicShapeSeriesBase";
import { runOn, delegateRemove, delegateCombine, markType } from "igniteui-react-core";
import { ImageTilesReadyEventArgs } from "./ImageTilesReadyEventArgs";
/**
 * @hidden
 */
var GeographicTileSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(GeographicTileSeries, _super);
    function GeographicTileSeries() {
        var _this = _super.call(this) || this;
        _this.mp = null;
        _this.mo = null;
        _this.imageTilesReady = null;
        _this.ab = GeographicTileSeries.$;
        return _this;
    }
    Object.defineProperty(GeographicTileSeries.prototype, "mq", {
        get: function () {
            return this.mp;
        },
        set: function (a) {
            var b = a != this.mq;
            if (b) {
                var c = this.mq;
                this.mp = a;
                this.raisePropertyChanged("TileImagery", c, a);
            }
        },
        enumerable: true,
        configurable: true
    });
    GeographicTileSeries.prototype.mu = function () {
        if (this.mq != null) {
            this.mq.clearTileCache();
        }
    };
    GeographicTileSeries.prototype.i0 = function (a, b, c, d) {
        _super.prototype.i0.call(this, a, b, c, d);
        switch (b) {
            case "TileImagery":
                if (this.l3 != null) {
                    this.l3.ng = this.mq;
                }
                break;
        }
    };
    GeographicTileSeries.prototype.l8 = function () {
        _super.prototype.l8.call(this);
        this.l3.ng = this.mq;
        if (this.mo != null) {
            var a = this.mo;
            a.imageTilesReady = delegateRemove(a.imageTilesReady, runOn(this, this.mt));
        }
        this.mo = this.l3;
        if (this.mo != null) {
            var b = this.mo;
            b.imageTilesReady = delegateCombine(b.imageTilesReady, runOn(this, this.mt));
        }
    };
    GeographicTileSeries.prototype.l2 = function () {
        return new TileSeries();
    };
    GeographicTileSeries.prototype.mt = function (a, b) {
        if (this.imageTilesReady != null) {
            this.imageTilesReady(this, new ImageTilesReadyEventArgs());
        }
    };
    GeographicTileSeries.$t = markType(GeographicTileSeries, 'GeographicTileSeries', GeographicShapeSeriesBase.$);
    return GeographicTileSeries;
}(GeographicShapeSeriesBase));
export { GeographicTileSeries };
//# sourceMappingURL=GeographicTileSeries.js.map
