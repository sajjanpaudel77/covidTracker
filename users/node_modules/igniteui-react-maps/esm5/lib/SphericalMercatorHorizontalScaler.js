/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import * as tslib_1 from "tslib";
import { HorizontalLinearScaler } from "igniteui-react-charts";
import { Rect } from "igniteui-react-core";
import { markType } from "igniteui-react-core";
/**
 * @hidden
 */
var SphericalMercatorHorizontalScaler = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(SphericalMercatorHorizontalScaler, _super);
    function SphericalMercatorHorizontalScaler() {
        var _this = _super.call(this) || this;
        _this.aj = null;
        _this.aj = new Rect(0, 0, 0, 1, 1);
        return _this;
    }
    SphericalMercatorHorizontalScaler.prototype.q = function (a, b) {
        if (!b.c.isEmpty) {
            var c = a * b.e.width + b.e.left * b.d.width;
            var d = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);
            return d;
        }
        else {
            return this.getMercatorUnscaledValue(a, b.e, b.d, b.a);
        }
    };
    SphericalMercatorHorizontalScaler.prototype.p = function (a, b) {
        if (!b.c.isEmpty) {
            var c = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);
            var d = (c - (b.e.left * b.d.width)) / b.e.width;
            return d;
        }
        else {
            return this.getMercatorScaledValue1(a, b.e, b.d, b.a);
        }
    };
    SphericalMercatorHorizontalScaler.prototype.af = function (values_) {
        var a = (Array.isArray(values_) ? values_ : null);
        return a;
        return null;
    };
    SphericalMercatorHorizontalScaler.prototype.v = function (a, b, c, d) {
        var e;
        var f = d.e;
        var g = d.d;
        var h = d.c;
        var i = d.a;
        var j = !h.isEmpty;
        var k = this.m;
        var l = this.o;
        var m = h.left;
        var n = h.width;
        var o = f.left;
        var p = f.width;
        var q = g.left;
        var r = g.width;
        var s = this.aj.left;
        var t = this.aj.width;
        var u = this.af(a);
        var v = false;
        if (u != null) {
            v = true;
        }
        for (var w = b; w < c; w++) {
            if (v) {
                e = u[w];
            }
            else {
                e = a.item(w);
            }
            if (j) {
                var x = (e - l) / (k);
                if (i) {
                    x = 1 - x;
                }
                x = m + n * (x - s) / t;
                var y = (x - (o * r)) / p;
                if (v) {
                    u[w] = y;
                }
                else {
                    a.item(w, y);
                }
            }
            else {
                var z = (e - l) / (k);
                if (i) {
                    z = 1 - z;
                }
                z = q + r * (z - o) / p;
                if (v) {
                    u[w] = z;
                }
                else {
                    a.item(w, z);
                }
            }
        }
    };
    SphericalMercatorHorizontalScaler.prototype.t = function (a, b, c, d, e) {
        d = a.kj;
        e = a.ki;
        return {
            p3: d,
            p4: e
        };
    };
    SphericalMercatorHorizontalScaler.prototype.getMercatorUnscaledValue = function (a, b, c, d) {
        var e = b.left + b.width * (a - c.left) / c.width;
        if (d) {
            e = 1 - e;
        }
        return this.o + e * (this.m);
    };
    SphericalMercatorHorizontalScaler.prototype.getMercatorScaledValue1 = function (a, b, c, d) {
        var e = (a - this.o) / (this.m);
        if (d) {
            e = 1 - e;
        }
        return c.left + c.width * (e - b.left) / b.width;
    };
    SphericalMercatorHorizontalScaler.prototype.getMercatorScaledValue2 = function (a, b, c, d, e) {
        var f = (a - this.o) / (this.m);
        if (e) {
            f = 1 - f;
        }
        return c.left + c.width * (f - b.left) / b.width;
    };
    SphericalMercatorHorizontalScaler.$t = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', HorizontalLinearScaler.$);
    return SphericalMercatorHorizontalScaler;
}(HorizontalLinearScaler));
export { SphericalMercatorHorizontalScaler };
//# sourceMappingURL=SphericalMercatorHorizontalScaler.js.map
