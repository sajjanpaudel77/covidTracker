import * as tslib_1 from "tslib";
import { delegateCombine, delegateRemove } from "igniteui-react-core";
import { IgrProgressiveLoadStatusEventArgs } from "igniteui-react-charts";
import { IgrGeographicMapSeriesHost } from "./igr-geographic-map-series-host";
import { GeographicHighDensityScatterSeries } from "./GeographicHighDensityScatterSeries";
import { ensureBool, colorToString, stringToColor } from "igniteui-react-core";
/**
 * Series class for a geographic map with points marked at given locations.
 * This is the geographic equivalent of a HighDensityScatterSeries.
*/
var IgrGeographicHighDensityScatterSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(IgrGeographicHighDensityScatterSeries, _super);
    function IgrGeographicHighDensityScatterSeries(props) {
        var _this = _super.call(this, props) || this;
        _this._progressiveLoadStatusChanged = null;
        _this._progressiveLoadStatusChanged_wrapped = null;
        return _this;
    }
    IgrGeographicHighDensityScatterSeries.prototype.createImplementation = function () {
        return new GeographicHighDensityScatterSeries();
    };
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "latitudeMemberPath", {
        /**
         * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
        */
        get: function () {
            return this.i.mq;
        },
        set: function (v) {
            this.i.mq = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "longitudeMemberPath", {
        /**
         * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
        */
        get: function () {
            return this.i.ms;
        },
        set: function (v) {
            this.i.ms = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "useBruteForce", {
        /**
         * Gets or sets the whether to use use brute force mode.
        */
        get: function () {
            return this.i.mf;
        },
        set: function (v) {
            this.i.mf = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "progressiveLoad", {
        /**
         * Gets or sets the whether to progressively load the data into the chart.
        */
        get: function () {
            return this.i.me;
        },
        set: function (v) {
            this.i.me = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "mouseOverEnabled", {
        /**
         * Gets or sets the whether the chart reacts to mouse move events.
        */
        get: function () {
            return this.i.md;
        },
        set: function (v) {
            this.i.md = ensureBool(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "heatMinimum", {
        /**
         * Gets or sets the density value that maps to the minimum heat color.
        */
        get: function () {
            return this.i.mh;
        },
        set: function (v) {
            this.i.mh = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "heatMaximum", {
        /**
         * Gets or sets the value that maps to the maximum heat color.
        */
        get: function () {
            return this.i.mg;
        },
        set: function (v) {
            this.i.mg = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "heatMinimumColor", {
        /**
         * Gets or sets the color to use for the minimum end of the scale.
        */
        get: function () {
            return colorToString(this.i.na);
        },
        set: function (v) {
            this.i.na = stringToColor(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "heatMaximumColor", {
        /**
         * Gets or sets the color to use for the maximum end of the scale.
        */
        get: function () {
            return colorToString(this.i.m9);
        },
        set: function (v) {
            this.i.m9 = stringToColor(v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "pointExtent", {
        /**
         * Gets or sets the the pixel extent of the square data points that are rendered.
        */
        get: function () {
            return this.i.mk;
        },
        set: function (v) {
            this.i.mk = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "progressiveStatus", {
        /**
         * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.
        */
        get: function () {
            return this.i.ml;
        },
        set: function (v) {
            this.i.ml = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicHighDensityScatterSeries.prototype, "progressiveLoadStatusChanged", {
        /**
         * Raised when the progressive loading state of the series has changed.
        */
        get: function () {
            return this._progressiveLoadStatusChanged;
        },
        set: function (ev) {
            var _this = this;
            if (this._progressiveLoadStatusChanged_wrapped !== null) {
                this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);
                this._progressiveLoadStatusChanged_wrapped = null;
                this._progressiveLoadStatusChanged = null;
            }
            this._progressiveLoadStatusChanged = ev;
            this._progressiveLoadStatusChanged_wrapped = function (o, e) {
                var outerArgs = new IgrProgressiveLoadStatusEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeProgressiveLoadStatusChanged) {
                    _this.beforeProgressiveLoadStatusChanged(_this, outerArgs);
                }
                if (_this._progressiveLoadStatusChanged) {
                    _this._progressiveLoadStatusChanged(_this, outerArgs);
                }
            };
            this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);
        },
        enumerable: true,
        configurable: true
    });
    return IgrGeographicHighDensityScatterSeries;
}(IgrGeographicMapSeriesHost));
export { IgrGeographicHighDensityScatterSeries };
//# sourceMappingURL=igr-geographic-high-density-scatter-series.js.map
