import * as tslib_1 from "tslib";
import { delegateCombine, delegateRemove } from "igniteui-react-core";
import { IgrStyleShapeEventArgs } from "igniteui-react-charts";
import { IgrGeographicShapeSeriesBase } from "./igr-geographic-shape-series-base";
import { GeographicPolylineSeries } from "./GeographicPolylineSeries";
import { Style } from "igniteui-react-core";
/**
 * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.
*/
var IgrGeographicPolylineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    tslib_1.__extends(IgrGeographicPolylineSeries, _super);
    function IgrGeographicPolylineSeries(props) {
        var _this = _super.call(this, props) || this;
        _this._styleShape = null;
        _this._styleShape_wrapped = null;
        return _this;
    }
    IgrGeographicPolylineSeries.prototype.createImplementation = function () {
        return new GeographicPolylineSeries();
    };
    Object.defineProperty(IgrGeographicPolylineSeries.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicPolylineSeries.prototype, "shapeFill", {
        /**
         * Gets or sets the fill brush.
        */
        get: function () {
            return this.i.mw ? this.i.mw.fill : null;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.mw.fill = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicPolylineSeries.prototype, "shapeStroke", {
        /**
         * Gets or sets the stroke brush.
        */
        get: function () {
            return this.i.mw ? this.i.mw.stroke : null;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.mw.stroke = v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicPolylineSeries.prototype, "shapeStrokeThickness", {
        /**
         * Gets or sets the stroke thickness.
        */
        get: function () {
            return this.i.mw ? this.i.mw.strokeThickness : NaN;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.mw.strokeThickness = +v;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgrGeographicPolylineSeries.prototype, "shapeOpacity", {
        /**
         * Gets or sets the opacity.
        */
        get: function () {
            return this.i.mw ? this.i.mw.opacity : NaN;
        },
        set: function (v) {
            this.ensureShapeStyle();
            this.i.mw.opacity = +v;
        },
        enumerable: true,
        configurable: true
    });
    IgrGeographicPolylineSeries.prototype.ensureShapeStyle = function () {
        if (this.i.mw) {
            return;
        }
        this.i.mw = new Style();
    };
    Object.defineProperty(IgrGeographicPolylineSeries.prototype, "styleShape", {
        get: function () {
            return this._styleShape;
        },
        set: function (ev) {
            var _this = this;
            if (this._styleShape_wrapped !== null) {
                this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);
                this._styleShape_wrapped = null;
                this._styleShape = null;
            }
            this._styleShape = ev;
            this._styleShape_wrapped = function (o, e) {
                var outerArgs = new IgrStyleShapeEventArgs();
                outerArgs._provideImplementation(e);
                if (_this.beforeStyleShape) {
                    _this.beforeStyleShape(_this, outerArgs);
                }
                if (_this._styleShape) {
                    _this._styleShape(_this, outerArgs);
                }
            };
            this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);
        },
        enumerable: true,
        configurable: true
    });
    return IgrGeographicPolylineSeries;
}(IgrGeographicShapeSeriesBase));
export { IgrGeographicPolylineSeries };
//# sourceMappingURL=igr-geographic-polyline-series.js.map
