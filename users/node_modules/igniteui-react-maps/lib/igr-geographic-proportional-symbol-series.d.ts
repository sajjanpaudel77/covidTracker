import { IgDataTemplate } from "igniteui-react-core";
import { MarkerType } from "igniteui-react-charts";
import { IgrSizeScale } from "igniteui-react-charts";
import { IgrBrushScale } from "igniteui-react-charts";
import { IgrGeographicMapSeriesHost, IIgrGeographicMapSeriesHostProps } from "./igr-geographic-map-series-host";
import { GeographicProportionalSymbolSeries } from "./GeographicProportionalSymbolSeries";
/**
 * Series class for a geographic map with points marked at given locations.
 * This is the geographic equivalent of a ScatterSeries.
*/
export declare class IgrGeographicProportionalSymbolSeries extends IgrGeographicMapSeriesHost<IIgrGeographicProportionalSymbolSeriesProps> {
    protected createImplementation(): GeographicProportionalSymbolSeries;
    /**
                                 * @hidden
                                 */
    readonly i: GeographicProportionalSymbolSeries;
    constructor(props: IIgrGeographicProportionalSymbolSeriesProps);
    /**
     * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
    */
    latitudeMemberPath: string;
    /**
     * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
    */
    longitudeMemberPath: string;
    /**
     * Gets or sets the marker type for the current series object.
     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
    */
    markerType: MarkerType;
    /**
     * Gets or sets the MarkerTemplate for the current series object.
    */
    markerTemplate: IgDataTemplate;
    /**
     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.
    */
    markerBrush: string;
    /**
     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.
    */
    markerOutline: string;
    /**
     * Gets or sets the maximum number of markerItems displayed by the current series.
     * If more than the specified number of markerItems are visible, the series will automatically
     * choose a representative set.
    */
    maximumMarkers: number;
    /**
     * Gets or sets the radius mapping property for the current series object.
    */
    radiusMemberPath: string;
    /**
     * Gets or sets the radius size scale for the bubbles.
    */
    radiusScale: IgrSizeScale;
    /**
     * Gets or sets the Label mapping property for the current series object.
    */
    labelMemberPath: string;
    /**
     * Gets or sets the fill mapping property for the current series object.
    */
    fillMemberPath: string;
    /**
     * Gets or sets the brush scale for the marker brush.
    */
    fillScale: IgrBrushScale;
    /**
     * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.
     * This setting applies only if multiple series are using the same FillScale.
    */
    fillScaleUseGlobalValues: boolean;
    /**
     * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.
     * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.
    */
    markerOutlineUsesFillScale: boolean;
    /**
     * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color
     * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)
    */
    markerOutlineBrightness: number;
    /**
     * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color
     * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)
    */
    markerBrushBrightness: number;
    /**
     * Gets or sets thickness of the marker outline
    */
    markerThickness: number;
    /**
     * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.
     * This setting applies only if multiple series are using the same RadiusScale.
    */
    radiusScaleUseGlobalValues: boolean;
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
}
export interface IIgrGeographicProportionalSymbolSeriesProps extends IIgrGeographicMapSeriesHostProps {
    /**
     * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.
    */
    latitudeMemberPath?: string;
    /**
     * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.
    */
    longitudeMemberPath?: string;
    /**
     * Gets or sets the marker type for the current series object.
     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
    */
    markerType?: MarkerType | string;
    /**
     * Gets or sets the MarkerTemplate for the current series object.
    */
    markerTemplate?: IgDataTemplate;
    /**
     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.
    */
    markerBrush?: string;
    /**
     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.
    */
    markerOutline?: string;
    /**
     * Gets or sets the maximum number of markerItems displayed by the current series.
     * If more than the specified number of markerItems are visible, the series will automatically
     * choose a representative set.
    */
    maximumMarkers?: number | string;
    /**
     * Gets or sets the radius mapping property for the current series object.
    */
    radiusMemberPath?: string;
    /**
     * Gets or sets the radius size scale for the bubbles.
    */
    radiusScale?: IgrSizeScale;
    /**
     * Gets or sets the Label mapping property for the current series object.
    */
    labelMemberPath?: string;
    /**
     * Gets or sets the fill mapping property for the current series object.
    */
    fillMemberPath?: string;
    /**
     * Gets or sets the brush scale for the marker brush.
    */
    fillScale?: IgrBrushScale;
    /**
     * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.
     * This setting applies only if multiple series are using the same FillScale.
    */
    fillScaleUseGlobalValues?: boolean | string;
    /**
     * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.
     * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.
    */
    markerOutlineUsesFillScale?: boolean | string;
    /**
     * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color
     * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)
    */
    markerOutlineBrightness?: number | string;
    /**
     * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color
     * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)
    */
    markerBrushBrightness?: number | string;
    /**
     * Gets or sets thickness of the marker outline
    */
    markerThickness?: number | string;
    /**
     * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.
     * This setting applies only if multiple series are using the same RadiusScale.
    */
    radiusScaleUseGlobalValues?: boolean | string;
}
