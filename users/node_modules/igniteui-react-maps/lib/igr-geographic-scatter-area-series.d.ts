import { IgrColorScale } from "igniteui-react-charts";
import { IgrTriangulationStatusEventArgs } from "igniteui-react-core";
import { IgrGeographicXYTriangulatingSeries, IIgrGeographicXYTriangulatingSeriesProps } from "./igr-geographic-xy-triangulating-series";
import { GeographicScatterAreaSeries } from "./GeographicScatterAreaSeries";
/**
 * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.
*/
export declare class IgrGeographicScatterAreaSeries extends IgrGeographicXYTriangulatingSeries<IIgrGeographicScatterAreaSeriesProps> {
    protected createImplementation(): GeographicScatterAreaSeries;
    /**
                                 * @hidden
                                 */
    readonly i: GeographicScatterAreaSeries;
    constructor(props: IIgrGeographicScatterAreaSeriesProps);
    /**
     * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
    */
    colorMemberPath: string;
    /**
     * The ColorScale used to resolve the color values of points in the series.
    */
    colorScale: IgrColorScale;
    findByName(name: string): any;
    protected _styling(container: any, component: any, parent?: any): void;
    private _triangulationStatusChanged;
    private _triangulationStatusChanged_wrapped;
    /**
     * Raised when the status of an ongoing Triangulation has changed.
    */
    triangulationStatusChanged: (s: IgrGeographicScatterAreaSeries, e: IgrTriangulationStatusEventArgs) => void;
}
export interface IIgrGeographicScatterAreaSeriesProps extends IIgrGeographicXYTriangulatingSeriesProps {
    /**
     * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.
    */
    colorMemberPath?: string;
    /**
     * The ColorScale used to resolve the color values of points in the series.
    */
    colorScale?: IgrColorScale;
    /**
     * Raised when the status of an ongoing Triangulation has changed.
    */
    triangulationStatusChanged?: (s: IgrGeographicScatterAreaSeries, e: IgrTriangulationStatusEventArgs) => void;
}
