import { IgrGeographicMapSeriesHost, IIgrGeographicMapSeriesHostProps } from "./igr-geographic-map-series-host";
import { GeographicShapeSeriesBase } from "./GeographicShapeSeriesBase";
import { IgrShapeDataSource } from "igniteui-react-core";
/**
 * Base class for series which render polygons on a map.
*/
export declare abstract class IgrGeographicShapeSeriesBase<P extends IIgrGeographicShapeSeriesBaseProps = IIgrGeographicShapeSeriesBaseProps> extends IgrGeographicMapSeriesHost<P> {
    readonly i: GeographicShapeSeriesBase;
    constructor(props: P);
    private _shapeDataSource;
    /**
     * Gets or sets the string path of the .shp portion of the Shapefile.
    */
    shapeDataSource: string;
    private _databaseSource;
    /**
     * Gets or sets the string path of the .dbf portion of the Shapefile.
    */
    databaseSource: string;
    private _currData;
    private _onImportCompleted;
    protected onUpdateDataSource(dataSource: any): any;
    private _cachedShapeDataSource;
    private updateShapeDataSource;
    private onShapeDataSourceImportCompleted;
    /**
 * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.
 * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.
*/
    shapeMemberPath: string;
    /**
     * Set a shapefile datasource to use with the series.
    */
    shapefileDataSource: IgrShapeDataSource;
    /**
     * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.
     * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.
    */
    shapeFilterResolution: number;
    findByName(name: string): any;
}
export interface IIgrGeographicShapeSeriesBaseProps extends IIgrGeographicMapSeriesHostProps {
    /**
     * Gets or sets the string path of the .shp portion of the Shapefile.
    */
    shapeDataSource?: string;
    /**
     * Gets or sets the string path of the ..dbf portion of the Shapefile.
    */
    databaseSource?: string;
    /**
 * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.
 * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.
*/
    shapeMemberPath?: string;
    /**
     * Set a shapefile datasource to use with the series.
    */
    shapefileDataSource?: IgrShapeDataSource;
    /**
     * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.
     * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.
    */
    shapeFilterResolution?: number | string;
}
