import { IgrGeographicMapImagery } from "./igr-geographic-map-imagery";
import { IgrImageTilesReadyEventArgs } from "./igr-image-tiles-ready-event-args";
import { IgrGeographicShapeSeriesBase, IIgrGeographicShapeSeriesBaseProps } from "./igr-geographic-shape-series-base";
import { GeographicTileSeries } from "./GeographicTileSeries";
/**
 * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.
*/
export declare class IgrGeographicTileSeries extends IgrGeographicShapeSeriesBase<IIgrGeographicTileSeriesProps> {
    protected createImplementation(): GeographicTileSeries;
    /**
                                 * @hidden
                                 */
    readonly i: GeographicTileSeries;
    constructor(props: IIgrGeographicTileSeriesProps);
    /**
     * The MapImagery which is used to provide the tiles for display.
    */
    tileImagery: IgrGeographicMapImagery;
    findByName(name: string): any;
    /**
     * Removes all cached tile Imagery from the
    
    */
    clearTileCache(): void;
    private _imageTilesReady;
    private _imageTilesReady_wrapped;
    /**
     * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.
    */
    imageTilesReady: (s: IgrGeographicTileSeries, e: IgrImageTilesReadyEventArgs) => void;
}
export interface IIgrGeographicTileSeriesProps extends IIgrGeographicShapeSeriesBaseProps {
    /**
     * The MapImagery which is used to provide the tiles for display.
    */
    tileImagery?: IgrGeographicMapImagery;
    /**
     * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.
    */
    imageTilesReady?: (s: IgrGeographicTileSeries, e: IgrImageTilesReadyEventArgs) => void;
}
